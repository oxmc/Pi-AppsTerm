#! /bin/bash

#Variables
workdir="~/pi-apps"
homedir="/usr/local/bin/Pi-AppsTerm"
todaydate="$(date +"%A,%B,%d,%Y")"
LATEST_VER="$(wget -qO- https://oxmc.github.io/Pi-Apps.info/data/appversion.txt)"
LOCAL_VER="$(cat "${homedir}/data/appversion.txt")"
Mode=$1
NameOfApp=$2
Botspot="https://github.com/Botspot/pi-apps"
oxmc="https://github.io/oxmc/Pi-Apps.info"
InstallLogs="$homedir/installed.txt"

#Functions
function error {
  echo -e "\e[91m$1\e[39m"
  exit 1
}

checkforupdate()
{
  #Tells user latest version of Pi-AppsTerm
  echo "latest version: $LATEST_VER"
  echo "local version: $LOCAL_VER"
  #Display update dialog if update is available
    if [ $LATEST_VER != $LOCAL_VER ];then
        #Download Botspots Awesome RPI app store!
        git clone $Botspot
        #Download latest version of this script
        git clone $oxmc
      else
         echo "No updates availible"
    fi
}

#Main
if [ $# == "2" ];then
  if [ $Mode == "update" ];then
    checkforupdate
  elif [ $Mode == "install" ];then
      if [ -d "$workdir/apps/$AppName" ]; then
        echo "Installing ${AppName}"
        if [ -f "$workdir/apps/$AppName/install-32" ];then
          bash $workdir/apps/$AppName/install-32 || error "Unable to install $AppName!"
        elif [ -f "$workdir/apps/$AppName/install-64" ];then
            bash $workdir/apps/$AppName/install-64 || error "Unable to install $AppName!"
        else
          bash $workdir/apps/$AppName/install || error "Unable to install $AppName!"
          echo "Installed ${AppName} on ${todaydate}" >> $InstallLogs || error "Unable to log install date for $AppName!"
        fi
      else
        error "Unkown appname '$2'! Please make sure to spell it correctly!"
      fi
  elif [ $Mode = "uninstall" ];then
      if [ $AppName == "pi-apps" ];then
        echo "Are you sure you want to delete pi-apps? y/n"
        read a
        if [ $a == "n" ];then
          echo "Cancelling uninstall..."
          exit 0
        else
          echo "Uninstalling pi-apps..."
          bash $workdir/uninstall || error "Unable to run uninstall file!"
        fi
      fi
      if [ -d "$workdir/apps/$AppName" ];then
        bash $workdir/apps/$AppName/uninstall || error "Unable to run uninstall script for ${AppName}!"
      fi
elif [ $# == "1" ];then
    if [ $Mode == "help" ];then
      echo "To install programs type 'pi-apps install nameofapp', example 'pi-apps install All Is Well' this will install the All Is Well app"    
      echo "To update pi-apps type 'pi-apps update' this will check if pi-apps is up to date"
      echo "To uninstall an app type 'pi-apps uninstall nameofapp' this will uninstall the app specified, example 'pi-apps uninstall All Is Well' this will uninstall the All Is Well app"  
      echo "To check the current version of pi-apps type 'pi-apps version', this will tell you the current verion of pi-apps i.e beta, 1.9, 2.0"
      exit 0
    else
      error "Unkown mode given, for help type 'pi-apps help'"
    fi
elif [ $Mode == "version" ];then
    echo "latest pi-apps version: $LATEST_VER"
    echo "local pi-apps version: $LOCAL_VER"
    exit 0
  fi
else
  error "Invalid amounts of arguments recived, please use 'pi-apps <Mode> <AppName>' to use this program correctly, if you need help please type 'pi-apps help'"
fi
